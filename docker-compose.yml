networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16

services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgrespw
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      custom:
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/var/lib/mongodb/dat
    networks:
      custom:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      custom:
  auction-svc:
    image: steveguoh/auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgrespw; Database=auctions
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=Http://+:80
    ports:
      - "7001:80"
      - "7777:7777"
    depends_on:
      - rabbitmq
      - postgres
    networks:
      custom:

  search-svc:
    image: steveguoh/search-svc:latest
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongo
      - AuctionServiceUrl=http://auction-svc
    ports:
      - "7002:80"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      custom:

  identity-svc:
    image: steveguoh/identity-svc:latest
    build: 
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientAPP=http://app.code.com
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgrespw; Database=identity
      - VIRTUAL_HOST=id.code.com
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 10.5.0.200

  gateway-svc:
    image: steveguoh/gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=https://app.code.com
      - VIRTUAL_HOST=api.code.com
    networks:
      custom:

  bid-svc:
    image: steveguoh/bid-svc:latest
    build: 
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDbConnection=mongodb://root:mongopw@mongo
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - "7003:80"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      custom:

  notify-svc:
    image: steveguoh/notify-svc:latest
    build: 
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - "7004:80"
    depends_on:
      - rabbitmq
    networks:
      custom:

  web-app:
    image: steveguoh/web-app
    build: 
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    extra_hosts:
      - id.code.com:10.5.0.200
    environment:
      - NEXTAUTH_SECRET=somethingreallyllysecret
      - NEXTAUTH_URL=http://app.code.com
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://gateway-svc/
      - ID_URL=http://id.code.com
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
      - VIRTUAL_HOST=app.code.com
      - VIRTUAL_PORT=3000
    networks:
      custom:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      custom:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs

volumes:
  pgdata:
  mongodata: